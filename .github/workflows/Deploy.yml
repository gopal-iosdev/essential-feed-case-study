name: Deploy

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install provisioning profile
      run: |
        gpg --quiet --batch --yes --decrypt --passphrase="${{ secrets.SECRET_KEY }}" --output .github/deployment/EssentialAppDistribution.mobileprovision .github/deployment/profile.mobileprovision.gpg
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        cp .github/deployment/EssentialAppDistribution.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/

    - name: Install keychain certificate
      run: |
        gpg --quiet --batch --yes --decrypt --passphrase="${{ secrets.SECRET_KEY }}" --output .github/deployment/certificate.p12 .github/deployment/certificate.p12.gpg
        security create-keychain -p "" build.keychain
        security import .github/deployment/certificate.p12 -t agg -k ~/Library/Keychains/build.keychain -P "${{ secrets.CERTIFICATE_PASSWORD }}" -A
        security list-keychains -s ~/Library/Keychains/build.keychain
        security default-keychain -s ~/Library/Keychains/build.keychain
        security unlock-keychain -p "" ~/Library/Keychains/build.keychain
        security set-key-partition-list -S apple-tool:,apple: -s -k "" ~/Library/Keychains/build.keychain

    - name: Select Xcode
      run: sudo xcode-select -switch /Applications/Xcode_15.3.app

    - name: Xcode version
      run: /usr/bin/xcodebuild -version

    - name: Fetch current project version
      run: |
        cd essential-feed-case-study/EssentialApp
        echo "Current Directory:"
        pwd
        echo "Directory Contents:"
        ls
        currentProjectVersion=$(xcrun agvtool what-version -terse)
        echo "Current project version for EssentialApp and EssentialAppTests: $currentProjectVersion"

    - name: Increment project version
      run: |
        cd essential-feed-case-study/EssentialApp
        echo "Current Directory:"
        pwd
        echo "Directory Contents:"
        ls
        xcrun agvtool next-version -all
        updatedProjectVersion=$(xcrun agvtool what-version -terse)
        echo "Updated project version for EssentialApp and EssentialAppTests: $updatedProjectVersion"

    - name: Build
      run: |
        xcodebuild clean archive -sdk iphoneos -workspace EssentialApp.xcworkspace -configuration "Release" -scheme "EssentialApp" -derivedDataPath "DerivedData" -archivePath "DerivedData/Archive/EssentialApp.xcarchive" CODE_SIGN_STYLE=Manual PROVISIONING_PROFILE_SPECIFIER="EssentialAppDistribution" CODE_SIGN_IDENTITY="iPhone Distribution" -allowProvisioningUpdates

    - name: Export
      run: xcodebuild -exportArchive -archivePath DerivedData/Archive/EssentialApp.xcarchive -exportOptionsPlist .github/deployment/ExportOptions.plist -exportPath DerivedData/ipa

    - name: Deploy
      run: xcrun altool --upload-app --type ios --file "DerivedData/ipa/EssentialApp.ipa" --username "${{ secrets.APPSTORE_USERNAME }}" --password "${{ secrets.APPSTORE_PASSWORD }}" --verbose